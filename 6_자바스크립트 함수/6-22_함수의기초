Function 이란?

1. 하나의 특별한 목적의 작업을 수행하도록 설계된 독립적인 블록
2. 필요할 때마다 호출하여 반복적으로 수행가능
3. 하나의 datatype으로 분류된다.

function 함수이름(매개변수1, 매개변수2,...) {
    함수가 호출되었을 때 실행하고자 하는 실행문;
}

function addNum(x, y) {
  console.log(x + y);
}

addNum(2, 3) // 5를 출력


return문

1. 반환문을 통해 호출자는 함수에서 실행된 결과를 전달받을 수 있다.
2. 반환문은 함수의 실행을 중단하고, return 키워드 다음에 명시된 표현식의 값을 호출자에게 반환
3. 모든 타입의 값을 반환 가능

function multiNum(x, y) {
  return (x*y); // x와 y를 곱한 결과를 반환
  console.log(x+y); // return문으로 인해 출력되지 않음
}

let num = multiNum(3,4); // 변수 num에 값을 함수로 계산된 값을 저장
console.log(num);


값으로서의 함수

function sqr(x) {                // 제곱의 값을 구하는 함수 sqr를 정의함.

    return x * x;

}

var sqrNum = sqr;                // 변수 sqrNum에 함수 sqr을 대입함.

document.write(sqr(4) + "<br>"); // 함수 sqr을 호출함.

document.write(sqrNum(4));       // 변수 sqrNum를 함수처럼 호출함.