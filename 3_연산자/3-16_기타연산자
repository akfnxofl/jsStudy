// 기타연산자


/* 문자열 결합 연산자
1. 피연산자가 모두 숫자이면 덧셈 수행
2. 피연산자가 하나라도 문자열이면 문자열 결합 수행 */

// 삼항연산자
// 1. 표현식 -> (논리식) ? true반환값 : false반환값
  ex:
    let x = 3, y = 5;
    let result = (x > y) ? x : Y;
    console.log(result);

// 쉼표연산자
  ex:
    for(let i = 0, j = 9; i <= j; i++, j--);

// delete 연산자
// 1. 객체, 객체의 프로퍼티, 배열의 요소 등을 삭제
// 2. 성공적으로 삭제되었을 경우 true, 반대의 경우 false 반환
  ex:
    let arr = [1, 2, 3];          // 배열 생성
    delete arr[2];                // 배열의 원소 중 인덱스가 2인 요소를 삭제함.
    console.log(arr); // [1, 2]
    // 배열에 빈자리가 생긴 것으로 undefined 값으로 직접 설정된 것은 아님.
    console.log(arr[2]); // undefined
    // 배열의 요소를 삭제하는 것이지 배열의 길이까지 줄이는 것은 아님.
    console.log(arr.length); // 3

// typeof 연산자
// 1. 피연산자의 타입을 반환

/* 결과값 :
숫자, NaN -> 'number'
문자열 -> 'string'
true, false -> 'boolean'
null -> 'object'
undefined -> 'undefined'
함수 -> 'function'
함수가 아닌 객체 -> 'object' */

/* instanceof 연산자
1.typeof연산자와 기능은 동일하나 (변수명) instanceof (판별할 타입) 이 동일하면 true 반환

void 연산자
피연산자로 어떤 타입의 값이 오던지 언제나 undefined 값만을 반환
주로  void(0)과 같은 형태로 사용 */